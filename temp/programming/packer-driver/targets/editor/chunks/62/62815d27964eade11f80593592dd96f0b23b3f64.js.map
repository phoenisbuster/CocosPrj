{"version":3,"sources":["file:///Users/admin/CocosProjects/flappybird/flappybird-cocos/assets/Scripts/GameController.ts"],"names":["_decorator","Component","director","Label","Node","CCFloat","UITransform","Vec3","Bird","PipeSpawnControl","GroundController","ccclass","property","GameController","type","currentScore","Instance","instance","onLoad","destroy","screenHeight","canvas","getComponent","height","screenWidth","width","groundController","node","position","GameOver","bird","SetStartSignal","pause","gameOverPopup","active","overScoreLabel","string","toString","inGamePopup","RestartGame","resume","RestartGround","ground1","RestartPipe","ground2","ground3","bind","RestartBird","getGroundCollision","inGameScoreLabel","StartGame","startGamePopup","canvasUITransform","groundUITransform","birdUiTransform"],"mappings":"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","sourcesContent":["import { _decorator, Canvas, Component, director, Label, Node, CCFloat, UITransform, Vec3 } from 'cc';\nimport { Bird } from './Bird';\nimport { PipeSpawnControl } from './PipeSpawnControl';\nimport { GroundController } from './GroundController';\nconst { ccclass, property } = _decorator;\n\n@ccclass('GameController')\nexport class GameController extends Component {\n    // Biến static lưu giữ instance duy nhất\n    private static instance: GameController;\n    public static Instance(): GameController {\n        if (GameController.instance == null)\n            GameController.instance = new GameController();\n        return GameController.instance;\n    }\n\n    @property({ type: Bird })\n    public bird: Bird;\n\n    @property({ type: Node })\n    public canvas: Node;\n\n    @property({ type: GroundController })\n    public groundController: GroundController;\n\n    @property({ type: PipeSpawnControl })\n    public ground1: PipeSpawnControl;\n\n    @property({ type: PipeSpawnControl })\n    public ground2: PipeSpawnControl;\n\n    @property({ type: PipeSpawnControl })\n    public ground3: PipeSpawnControl;\n\n    @property(CCFloat)\n    public timeCountStartGame: number = 5;\n    @property(CCFloat)\n    public screenHeight: number;\n    @property(CCFloat)\n    public screenWidth: number;\n\n    @property({ type: Label })\n    public overScoreLabel: Label;\n    @property({ type: Label })\n    public inGameScoreLabel: Label;\n    @property({ type: Node })\n    public gameOverPopup: Node;\n    @property({ type: Node })\n    public inGamePopup: Node;\n    @property({ type: Node })\n    public startGamePopup: Node;\n\n    public currentScore: number;\n    \n    onLoad() \n    {\n        if(GameController.instance != null && GameController.instance != this)  \n        {\n            this.destroy(); // Nếu đã có instance, hủy node mới\n            return;    \n        } \n\n        GameController.instance = this;\n        this.screenHeight = this.canvas.getComponent(UITransform).height;\n        this.screenWidth = this.canvas.getComponent(UITransform).width;\n        this.groundController.node.position = new Vec3(0, -(GameController.Instance().screenHeight / 2), 0);\n        this.groundController.node.position = new Vec3(-(GameController.Instance().screenWidth / 2), 0, 0);\n\n    }\n\n    public GameOver() \n    {\n        this.bird.SetStartSignal(false, null);\n        director.pause();\n        this.gameOverPopup.active = true;\n        this.overScoreLabel.string = this.currentScore.toString();\n        this.inGamePopup.active = false;\n    }\n\n    public RestartGame() \n    {\n        if (!this.gameOverPopup.active)\n            return;\n\n        director.resume();\n        this.inGamePopup.active = true;\n\n        this.groundController.RestartGround(true);\n\n        this.ground1.RestartPipe();\n        this.ground2.RestartPipe();\n        this.ground3.RestartPipe();\n\n        this.bird.SetStartSignal(true, this.GameOver.bind(this));\n        this.bird.RestartBird(this.getGroundCollision());\n\n        this.currentScore = 0;\n        this.inGameScoreLabel.string = this.currentScore.toString();\n        this.gameOverPopup.active = false;\n    }\n\n    public StartGame() \n    {\n        this.startGamePopup.active = false;\n        this.inGamePopup.active = true;\n        this.gameOverPopup.active = false;\n\n        this.groundController.RestartGround(true);\n\n        this.ground1.RestartPipe();\n        this.ground2.RestartPipe();\n        this.ground3.RestartPipe();\n\n        this.bird.SetStartSignal(true, this.GameOver.bind(this));\n        this.bird.RestartBird(this.getGroundCollision());\n\n        this.currentScore = 0;\n        this.inGameScoreLabel.string = this.currentScore.toString();\n        this.gameOverPopup.active = false;\n    }\n\n    private getGroundCollision(): number\n    {\n        const canvasUITransform = this.canvas.getComponent(UITransform);\n        const groundUITransform = this.ground1.getComponent(UITransform);\n        const birdUiTransform = this.bird.getComponent(UITransform);\n        return (canvasUITransform.height / 2) - groundUITransform.height - (birdUiTransform.height / 2);\n    }\n}\n\n\n"]}